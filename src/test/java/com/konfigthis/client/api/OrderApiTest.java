/*
 * Seel API
 * Seel API
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Address;
import com.konfigthis.client.model.Customer;
import com.konfigthis.client.model.Item;
import com.konfigthis.client.model.Order;
import com.konfigthis.client.model.OrderBatchCreateOrdersRequest;
import com.konfigthis.client.model.OrderBatchCreateOrdersResponse;
import com.konfigthis.client.model.OrderCreateNewOrderRequest;
import com.konfigthis.client.model.OrderCreateNewOrderRequestSeelServicesInner;
import com.konfigthis.client.model.OrderUpdateOrderDetailsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrderApi
 */
@Disabled
public class OrderApiTest {

    private static OrderApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new OrderApi(apiClient);
    }

    /**
     * Batch create orders
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchCreateOrdersTest() throws ApiException {
        String xSeelAPIKey = null;
        String xSeelAPIVersion = null;
        String partner = null;
        List<Order> orders = null;
        OrderBatchCreateOrdersResponse response = api.batchCreateOrders(xSeelAPIKey, xSeelAPIVersion, partner)
                .orders(orders)
                .execute();
        // TODO: test validations
    }

    /**
     * Cancel an order
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelOrderByIdTest() throws ApiException {
        String orderId = null;
        String xSeelAPIKey = null;
        String xSeelAPIVersion = null;
        String partner = null;
        Order response = api.cancelOrderById(orderId, xSeelAPIKey, xSeelAPIVersion, partner)
                .execute();
        // TODO: test validations
    }

    /**
     * Create an order
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewOrderTest() throws ApiException {
        String orderId = null;
        String orderNumber = null;
        String sessionId = null;
        String createdTs = null;
        List<Item> lineItems = null;
        Address shippingAddress = null;
        Customer customer = null;
        String xSeelAPIKey = null;
        String xSeelAPIVersion = null;
        String partner = null;
        String cartId = null;
        String merchantId = null;
        String deviceId = null;
        String clientIp = null;
        List<OrderCreateNewOrderRequestSeelServicesInner> seelServices = null;
        Object extraInfo = null;
        Order response = api.createNewOrder(orderId, orderNumber, sessionId, createdTs, lineItems, shippingAddress, customer, xSeelAPIKey, xSeelAPIVersion, partner)
                .cartId(cartId)
                .merchantId(merchantId)
                .deviceId(deviceId)
                .clientIp(clientIp)
                .seelServices(seelServices)
                .extraInfo(extraInfo)
                .execute();
        // TODO: test validations
    }

    /**
     * Get an order
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String orderId = null;
        String xSeelAPIKey = null;
        String xSeelAPIVersion = null;
        String partner = null;
        Order response = api.getById(orderId, xSeelAPIKey, xSeelAPIVersion, partner)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an order
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrderDetailsTest() throws ApiException {
        String updatedTs = null;
        String orderId = null;
        String xSeelAPIKey = null;
        String xSeelAPIVersion = null;
        String partner = null;
        List<Item> lineItems = null;
        Address shippingAddress = null;
        Customer customer = null;
        Object extraInfo = null;
        Order response = api.updateOrderDetails(updatedTs, orderId, xSeelAPIKey, xSeelAPIVersion, partner)
                .lineItems(lineItems)
                .shippingAddress(shippingAddress)
                .customer(customer)
                .extraInfo(extraInfo)
                .execute();
        // TODO: test validations
    }

}
