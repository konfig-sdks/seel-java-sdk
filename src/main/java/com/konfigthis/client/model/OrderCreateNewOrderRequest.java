/*
 * Seel API
 * Seel API
 *
 * The version of the OpenAPI document: 1.3.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Address;
import com.konfigthis.client.model.Customer;
import com.konfigthis.client.model.Item;
import com.konfigthis.client.model.OrderCreateNewOrderRequestSeelServicesInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * OrderCreateNewOrderRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class OrderCreateNewOrderRequest {
  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "order_number";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_SESSION_ID = "session_id";
  @SerializedName(SERIALIZED_NAME_SESSION_ID)
  private String sessionId;

  public static final String SERIALIZED_NAME_CART_ID = "cart_id";
  @SerializedName(SERIALIZED_NAME_CART_ID)
  private String cartId;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchant_id";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_DEVICE_ID = "device_id";
  @SerializedName(SERIALIZED_NAME_DEVICE_ID)
  private String deviceId;

  public static final String SERIALIZED_NAME_CLIENT_IP = "client_ip";
  @SerializedName(SERIALIZED_NAME_CLIENT_IP)
  private String clientIp;

  public static final String SERIALIZED_NAME_CREATED_TS = "created_ts";
  @SerializedName(SERIALIZED_NAME_CREATED_TS)
  private String createdTs;

  public static final String SERIALIZED_NAME_LINE_ITEMS = "line_items";
  @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
  private List<Item> lineItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "shipping_address";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private Address shippingAddress;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private Customer customer;

  public static final String SERIALIZED_NAME_SEEL_SERVICES = "seel_services";
  @SerializedName(SERIALIZED_NAME_SEEL_SERVICES)
  private List<OrderCreateNewOrderRequestSeelServicesInner> seelServices = null;

  public static final String SERIALIZED_NAME_EXTRA_INFO = "extra_info";
  @SerializedName(SERIALIZED_NAME_EXTRA_INFO)
  private Object extraInfo;

  public OrderCreateNewOrderRequest() {
  }

  public OrderCreateNewOrderRequest orderId(String orderId) {
    
    
    
    
    this.orderId = orderId;
    return this;
  }

   /**
   * The unique identifier for the order in the system.
   * @return orderId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "order12345", required = true, value = "The unique identifier for the order in the system.")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    
    
    
    this.orderId = orderId;
  }


  public OrderCreateNewOrderRequest orderNumber(String orderNumber) {
    
    
    
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * The reference number that is visible to the merchant and shopper. Use the order ID value if there is no separate order number.
   * @return orderNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "#12345", required = true, value = "The reference number that is visible to the merchant and shopper. Use the order ID value if there is no separate order number.")

  public String getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(String orderNumber) {
    
    
    
    this.orderNumber = orderNumber;
  }


  public OrderCreateNewOrderRequest sessionId(String sessionId) {
    
    
    
    
    this.sessionId = sessionId;
    return this;
  }

   /**
   * Shopping session ID of the order
   * @return sessionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "12345678", required = true, value = "Shopping session ID of the order")

  public String getSessionId() {
    return sessionId;
  }


  public void setSessionId(String sessionId) {
    
    
    
    this.sessionId = sessionId;
  }


  public OrderCreateNewOrderRequest cartId(String cartId) {
    
    
    
    
    this.cartId = cartId;
    return this;
  }

   /**
   * Cart ID of the order
   * @return cartId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "cart_000001", value = "Cart ID of the order")

  public String getCartId() {
    return cartId;
  }


  public void setCartId(String cartId) {
    
    
    
    this.cartId = cartId;
  }


  public OrderCreateNewOrderRequest merchantId(String merchantId) {
    
    
    
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Merchant ID of the order
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "merchant_000001", value = "Merchant ID of the order")

  public String getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(String merchantId) {
    
    
    
    this.merchantId = merchantId;
  }


  public OrderCreateNewOrderRequest deviceId(String deviceId) {
    
    
    
    
    this.deviceId = deviceId;
    return this;
  }

   /**
   * The ID of the client device.
   * @return deviceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "device123", value = "The ID of the client device.")

  public String getDeviceId() {
    return deviceId;
  }


  public void setDeviceId(String deviceId) {
    
    
    
    this.deviceId = deviceId;
  }


  public OrderCreateNewOrderRequest clientIp(String clientIp) {
    
    
    
    
    this.clientIp = clientIp;
    return this;
  }

   /**
   * The IP address of the client.
   * @return clientIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "127.0.0.1", value = "The IP address of the client.")

  public String getClientIp() {
    return clientIp;
  }


  public void setClientIp(String clientIp) {
    
    
    
    this.clientIp = clientIp;
  }


  public OrderCreateNewOrderRequest createdTs(String createdTs) {
    
    
    
    
    this.createdTs = createdTs;
    return this;
  }

   /**
   * Order created timestamp in milliseconds
   * @return createdTs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1686049398000", required = true, value = "Order created timestamp in milliseconds")

  public String getCreatedTs() {
    return createdTs;
  }


  public void setCreatedTs(String createdTs) {
    
    
    
    this.createdTs = createdTs;
  }


  public OrderCreateNewOrderRequest lineItems(List<Item> lineItems) {
    
    
    
    
    this.lineItems = lineItems;
    return this;
  }

  public OrderCreateNewOrderRequest addLineItemsItem(Item lineItemsItem) {
    this.lineItems.add(lineItemsItem);
    return this;
  }

   /**
   * The list of items included in the order.
   * @return lineItems
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The list of items included in the order.")

  public List<Item> getLineItems() {
    return lineItems;
  }


  public void setLineItems(List<Item> lineItems) {
    
    
    
    this.lineItems = lineItems;
  }


  public OrderCreateNewOrderRequest shippingAddress(Address shippingAddress) {
    
    
    
    
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Address getShippingAddress() {
    return shippingAddress;
  }


  public void setShippingAddress(Address shippingAddress) {
    
    
    
    this.shippingAddress = shippingAddress;
  }


  public OrderCreateNewOrderRequest customer(Customer customer) {
    
    
    
    
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Customer getCustomer() {
    return customer;
  }


  public void setCustomer(Customer customer) {
    
    
    
    this.customer = customer;
  }


  public OrderCreateNewOrderRequest seelServices(List<OrderCreateNewOrderRequestSeelServicesInner> seelServices) {
    
    
    
    
    this.seelServices = seelServices;
    return this;
  }

  public OrderCreateNewOrderRequest addSeelServicesItem(OrderCreateNewOrderRequestSeelServicesInner seelServicesItem) {
    if (this.seelServices == null) {
      this.seelServices = new ArrayList<>();
    }
    this.seelServices.add(seelServicesItem);
    return this;
  }

   /**
   * The list of Seel services of the order.
   * @return seelServices
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of Seel services of the order.")

  public List<OrderCreateNewOrderRequestSeelServicesInner> getSeelServices() {
    return seelServices;
  }


  public void setSeelServices(List<OrderCreateNewOrderRequestSeelServicesInner> seelServices) {
    
    
    
    this.seelServices = seelServices;
  }


  public OrderCreateNewOrderRequest extraInfo(Object extraInfo) {
    
    
    
    
    this.extraInfo = extraInfo;
    return this;
  }

   /**
   * Additional information for the order
   * @return extraInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{}", value = "Additional information for the order")

  public Object getExtraInfo() {
    return extraInfo;
  }


  public void setExtraInfo(Object extraInfo) {
    
    
    
    this.extraInfo = extraInfo;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the OrderCreateNewOrderRequest instance itself
   */
  public OrderCreateNewOrderRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderCreateNewOrderRequest orderCreateNewOrderRequest = (OrderCreateNewOrderRequest) o;
    return Objects.equals(this.orderId, orderCreateNewOrderRequest.orderId) &&
        Objects.equals(this.orderNumber, orderCreateNewOrderRequest.orderNumber) &&
        Objects.equals(this.sessionId, orderCreateNewOrderRequest.sessionId) &&
        Objects.equals(this.cartId, orderCreateNewOrderRequest.cartId) &&
        Objects.equals(this.merchantId, orderCreateNewOrderRequest.merchantId) &&
        Objects.equals(this.deviceId, orderCreateNewOrderRequest.deviceId) &&
        Objects.equals(this.clientIp, orderCreateNewOrderRequest.clientIp) &&
        Objects.equals(this.createdTs, orderCreateNewOrderRequest.createdTs) &&
        Objects.equals(this.lineItems, orderCreateNewOrderRequest.lineItems) &&
        Objects.equals(this.shippingAddress, orderCreateNewOrderRequest.shippingAddress) &&
        Objects.equals(this.customer, orderCreateNewOrderRequest.customer) &&
        Objects.equals(this.seelServices, orderCreateNewOrderRequest.seelServices) &&
        Objects.equals(this.extraInfo, orderCreateNewOrderRequest.extraInfo)&&
        Objects.equals(this.additionalProperties, orderCreateNewOrderRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, orderNumber, sessionId, cartId, merchantId, deviceId, clientIp, createdTs, lineItems, shippingAddress, customer, seelServices, extraInfo, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderCreateNewOrderRequest {\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    cartId: ").append(toIndentedString(cartId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    clientIp: ").append(toIndentedString(clientIp)).append("\n");
    sb.append("    createdTs: ").append(toIndentedString(createdTs)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    seelServices: ").append(toIndentedString(seelServices)).append("\n");
    sb.append("    extraInfo: ").append(toIndentedString(extraInfo)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("order_id");
    openapiFields.add("order_number");
    openapiFields.add("session_id");
    openapiFields.add("cart_id");
    openapiFields.add("merchant_id");
    openapiFields.add("device_id");
    openapiFields.add("client_ip");
    openapiFields.add("created_ts");
    openapiFields.add("line_items");
    openapiFields.add("shipping_address");
    openapiFields.add("customer");
    openapiFields.add("seel_services");
    openapiFields.add("extra_info");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("order_id");
    openapiRequiredFields.add("order_number");
    openapiRequiredFields.add("session_id");
    openapiRequiredFields.add("created_ts");
    openapiRequiredFields.add("line_items");
    openapiRequiredFields.add("shipping_address");
    openapiRequiredFields.add("customer");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderCreateNewOrderRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OrderCreateNewOrderRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderCreateNewOrderRequest is not found in the empty JSON string", OrderCreateNewOrderRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrderCreateNewOrderRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      if (!jsonObj.get("order_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_number").toString()));
      }
      if (!jsonObj.get("session_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `session_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("session_id").toString()));
      }
      if ((jsonObj.get("cart_id") != null && !jsonObj.get("cart_id").isJsonNull()) && !jsonObj.get("cart_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cart_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cart_id").toString()));
      }
      if ((jsonObj.get("merchant_id") != null && !jsonObj.get("merchant_id").isJsonNull()) && !jsonObj.get("merchant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_id").toString()));
      }
      if ((jsonObj.get("device_id") != null && !jsonObj.get("device_id").isJsonNull()) && !jsonObj.get("device_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `device_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("device_id").toString()));
      }
      if ((jsonObj.get("client_ip") != null && !jsonObj.get("client_ip").isJsonNull()) && !jsonObj.get("client_ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client_ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client_ip").toString()));
      }
      if (!jsonObj.get("created_ts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_ts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_ts").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("line_items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `line_items` to be an array in the JSON string but got `%s`", jsonObj.get("line_items").toString()));
      }

      JsonArray jsonArraylineItems = jsonObj.getAsJsonArray("line_items");
      // validate the required field `line_items` (array)
      for (int i = 0; i < jsonArraylineItems.size(); i++) {
        Item.validateJsonObject(jsonArraylineItems.get(i).getAsJsonObject());
      };
      // validate the required field `shipping_address`
      Address.validateJsonObject(jsonObj.getAsJsonObject("shipping_address"));
      // validate the required field `customer`
      Customer.validateJsonObject(jsonObj.getAsJsonObject("customer"));
      if (jsonObj.get("seel_services") != null && !jsonObj.get("seel_services").isJsonNull()) {
        JsonArray jsonArrayseelServices = jsonObj.getAsJsonArray("seel_services");
        if (jsonArrayseelServices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("seel_services").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `seel_services` to be an array in the JSON string but got `%s`", jsonObj.get("seel_services").toString()));
          }

          // validate the optional field `seel_services` (array)
          for (int i = 0; i < jsonArrayseelServices.size(); i++) {
            OrderCreateNewOrderRequestSeelServicesInner.validateJsonObject(jsonArrayseelServices.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderCreateNewOrderRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderCreateNewOrderRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderCreateNewOrderRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderCreateNewOrderRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderCreateNewOrderRequest>() {
           @Override
           public void write(JsonWriter out, OrderCreateNewOrderRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderCreateNewOrderRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             OrderCreateNewOrderRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderCreateNewOrderRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderCreateNewOrderRequest
  * @throws IOException if the JSON string is invalid with respect to OrderCreateNewOrderRequest
  */
  public static OrderCreateNewOrderRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderCreateNewOrderRequest.class);
  }

 /**
  * Convert an instance of OrderCreateNewOrderRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

